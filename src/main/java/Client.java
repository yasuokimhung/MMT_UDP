
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Administrator
 */
public class Client extends javax.swing.JFrame {

    private InetAddress host;
    private int port = 20008;
    private String name;

    public Client(InetAddress host, String name) {
        try {
            this.host = host;
            this.name = name;
            initComponents();
            
            this.setTitle("Client: " + name); //set title for UI
            this.setResizable(false);
            this.setLocationRelativeTo(null);
            
            nameLabel.setText("Hello: " + name);
            ClientTextArea.append("Hello " + name + "\n");
            execute();
        } catch (IOException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void execute() throws IOException {
        //Tạo Socket
        DatagramSocket client = new DatagramSocket();

        //Phần bổ sung
        client.send(createPacket(name + " connected!"));

        ReadClient read = new ReadClient(client);
        read.start();
        WriteClient write = new WriteClient(client, host, port, name);
        write.start();
    }


    private DatagramPacket createPacket(String value) {
        byte[] arrData = value.getBytes();
        return new DatagramPacket(arrData, arrData.length, host, port);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ClientTextArea = new javax.swing.JTextArea();
        nameLabel = new javax.swing.JLabel();
        ClientTextField = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ClientTextArea.setColumns(20);
        ClientTextArea.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        ClientTextArea.setRows(5);
        jScrollPane1.setViewportView(ClientTextArea);

        nameLabel.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        nameLabel.setText("Hello: ");

        ClientTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientTextFieldActionPerformed(evt);
            }
        });

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ClientTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(ClientTextField))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        if(!ClientTextField.getText().equals("")) {
            try {
            DatagramSocket client = new DatagramSocket();
            WriteClient write = new WriteClient(client, host, port, name);
            write.start();
        } catch (SocketException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void ClientTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClientTextFieldActionPerformed
    
    class ReadClient extends Thread {

    private DatagramSocket client;

    public ReadClient(DatagramSocket client) {
        this.client = client;
    }

    @Override
    public void run() {
        try {
            while (true) {
                String sms = recieveData(client);
                //System.out.println(sms);
                ClientTextArea.append(sms + "\n");
            }
        } catch (Exception e) {
            // TODO: handle exception
        }
    }

    private String recieveData(DatagramSocket client) throws IOException {
        byte[] temp = new byte[1024];
        DatagramPacket recieve_Packet = new DatagramPacket(temp, temp.length);
        client.receive(recieve_Packet);
        return new String(recieve_Packet.getData()).trim();
    }
}

class WriteClient extends Thread {

    private DatagramSocket client;
    private InetAddress host;
    private int port;
    private String name;

    
    public WriteClient(DatagramSocket client, InetAddress host, int port, String name) {
        this.client = client;
        this.host = host;
        this.port = port;
        this.name = name;

    }

    @Override
    public void run() {

        try {
            String sms = ClientTextField.getText();
            DatagramPacket DP = createPacket(name + ": " + sms);	//Đóng gói chuẩn bị gửi đi
            client.send(DP);
            ClientTextField.setText("");
        } catch (Exception e) {
            // TODO: handle exception
        }
    }

    private DatagramPacket createPacket(String value) {
        byte[] arrData = value.getBytes();
        return new DatagramPacket(arrData, arrData.length, host, port);
    }
}

    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                try {
//                    new Client().setVisible(true);
//                    Client client = new Client(InetAddress.getLocalHost(), 20008);
//                    client.execute();
//                } catch (UnknownHostException ex) {
//                    Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
//                } catch (IOException ex) {
//                    Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea ClientTextArea;
    private javax.swing.JTextField ClientTextField;
    private javax.swing.JButton btnSend;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel;
    // End of variables declaration//GEN-END:variables
}

